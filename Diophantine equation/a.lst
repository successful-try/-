Microsoft (R) Macro Assembler Version 6.14.8444		    09/11/21 19:19:45
a.asm							     Page 1 - 1


				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; Исключение из списка служебных слов
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 

				COMMENT *

				 
				*
				extrn Gen@0: near
				extrn Print@0: near
				extrn  Diophant@0: near
				extrn Mutacia@0: near

 00000019			.data; 
 00000019 00000000			N dd ? ; количество Osobi
 0000001D 00000000			M dd ? ; количество итераций
 00000021 00000000			Mode_r dd ? ; выбор режима
 00000025 00000014			X_20 dd 20
 00000029 00000000			Index_child dd ?
 0000002D 00000000			tmp1 dd ?
 00000031 00000000			tmp2 dd ?
 00000035  00000019 [			Osobi dd 25 dup (1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5)
	    00000001
	    00000001
	    00000001
	    00000001
	    00000001
	    00000002
	    00000002
	    00000002
	    00000002
	    00000002
	    00000003
	    00000003
	    00000003
	    00000003
	    00000003
	    00000004
	    00000004
	    00000004
	    00000004
	    00000004
	    00000005
	    00000005
	    00000005
	    00000005
	    00000005
	   ]
					;Osobi dd 5 dup (5 dup(0)) 1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5
 000009F9  00000014 [			Children dd 20 dup (5 dup(0)); Массив для детей в количестве 2N
	    00000005 [
	     00000000
	    ]
	   ]
 00000B89  0000000A [			Parent_1 dd 10 dup (0); Parent - индекс особей для скрещивания из первой корзины
	    00000000
	   ]
 00000BB1  0000000A [			Parent_2 dd 10 dup (0); Parent - индекс особей для скрещивания из второй корзины
	    00000000
	   ]
 00000BD9  0000000A [			Bit dd 10 dup(0) ; массив для одноточечного скрещивания
	    00000000
	   ]
 00000C01  0000000A [			Bit_M dd 10 dup(0) ;  массив для мутации
	    00000000
	   ]
					
 00000C29  0000001E [			All_ dd 30 dup (5 dup(0)); массив, включающий 3N особей (родители + дети)
	    00000005 [
	     00000000
	    ]
	   ]
 00000E81  0000001E [			Answers dd 30 dup(?)
	    00000000
	   ]
					
 00000EF9 0000000A			Probability_M dd 10 (0) ; вероятность мутации

 00000000			.code
 00000000			Start:
				;;;;;;Задание числа особей N;;;;;;;;;;;;;;;;;;;;;;;;;	
						outstrln "Vvedite chislo"
						inintln N, "N = "
						
 00000157  83 3D 00000019 R			cmp N, 4
	   04
 0000015E  0F 82 00001B81			jb finish2
 00000164  83 3D 00000019 R			cmp N, 10
	   0A
 0000016B  0F 87 00001B74			ja finish2
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

					
				;;;;;;Задание числа итераций М;;;;;;;;;;;;;;;;;;;;;;;	

				outstrln "Vvedite chislo iteracii"
						inintln M, "M = "
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	

				;;;;;Задание режима;;;;;;;;;;;;;;;;;;;;;;;	

				outstrln "Vvedite chislo dlia vibora rejima raboti (0-testovii, luboe drugoe - obicnii)"
						inintln Mode_r, "Mode_r = "
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;Генерация массива Osobi;;;;;;;;;;;;;;;;;;;;;;;;;			
				COMMENT ^	
					mov esi, 0
					inint Osobi[esi], "Vvedite pervii element massiva Osobi = "
					
					lea ebx, Osobi
					mov eax, 5; 5 столбцов (количество Х)
					mul N ; передача 5*N элементов
					
					push ebx
					push eax
					
					outstrln "Osobi:"
					
					Call Gen@0
					
					pop eax
					pop ebx
				^	
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
					
 0000041F  83 3D 00000021 R		cmp Mode_r , 0
	   00
 00000426  75 14			jne Out1
				;;;;;;Вывод массива Osobi;;;;;;;;;;;;;;;;;;;;;;;;;	

 00000428  8D 1D 00000035 R		lea ebx, Osobi
 0000042E  A1 00000019 R		mov eax, N ; передача количества N строк
					
 00000433  53				push ebx
 00000434  50				push eax
					
 00000435  E8 00000000 E		Call Print@0
					
 0000043A  58				pop eax
 0000043B  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
 0000043C			Out1:
					
 0000043C			BEGIN:
				;;;;;;;;;;Генерация 1-го массива родителей по индексам;;;;;;;;;;;;;;;;;;
 0000043C  B8 00000004			mov eax, 4 ; потому что DD
 00000441  F7 25 00000019 R		mul N
 00000447  83 E8 04			sub eax, 4
 0000044A  8B D8			mov ebx, eax; индекс последней строки
					
 0000044C  BE 00000004			mov esi, 4  ; индекс последнего столбца
					
 00000451  8B 94 1E			mov edx, Osobi[ebx][esi] ; последний заполненный элемент среди Osobi
	   00000035 R
 00000458  89 15 00000B89 R		mov Parent_1[0], edx ; кидаем последний  элемент среди Osobi
 0000045E  8D 1D 00000B89 R		lea ebx, Parent_1
 00000464  A1 00000019 R		mov eax, N
					
 00000469  53				push ebx
 0000046A  50				push eax 
					
 0000046B  E8 00000000 E		Call Gen@0
					
 00000470  58				pop eax
 00000471  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;Генерация 2-го массива родителей по индексам;;;;;;;;;;;;;;;;;;;
 00000472  B8 00000004			mov eax, 4
 00000477  F7 25 00000019 R		mul N
 0000047D  83 E8 04			sub eax, 4
 00000480  8B D8			mov ebx, eax; индекс последнего элемента Parent_2
					
 00000482  8B 93 00000B89 R		mov edx,  Parent_1[ebx] ; последний элемент Parent_1
 00000488  89 15 00000BB1 R		mov Parent_2[0], edx
 0000048E  8D 1D 00000BB1 R		lea ebx, Parent_2
 00000494  A1 00000019 R		mov eax, N
					
 00000499  53				push ebx
 0000049A  50				push eax 
					
 0000049B  E8 00000000 E		Call Gen@0
					
 000004A0  58				pop eax
 000004A1  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


				;;;;;;;;;;;;Вывод на печать индексы родителей для скрещивания ;;;;;;;;;;;;;;;;
				;;;;;;;;;;;;;;;;;;в формате двух массивов по модулю N;;;;;;;;;;;;;;;;;;;;;;;;;;
					
					newline
 00000558  83 3D 00000021 R	cmp Mode_r , 0
	   00
 0000055F  75 35		jne Out2

					outstr "Parent 1: "
 00000596			Out2:
 00000596  BA 00000000			mov edx, 0
 0000059B  BE 00000000			mov esi, 0
 000005A0  8B 0D 00000019 R		mov ecx, N
 000005A6			L2:
 000005A6  8B 86 00000B89 R		mov eax, Parent_1 [esi]
 000005AC  F7 35 00000019 R		div N ; чтобы получить индекс от 0 до N-1
 000005B2  89 96 00000B89 R		mov Parent_1 [esi], edx	
					
 000005B8  83 3D 00000021 R	cmp Mode_r, 0
	   00
 000005BF  75 52		jne Out3

					outword Parent_1 [esi], , " "
 00000613			Out3:

 00000613  83 C6 04			add esi, 4
 00000616  E2 8E			loop L2
					
 00000618  83 3D 00000021 R	cmp Mode_r, 0
	   00
 0000061F  0F 85 000000EB	jne Out4

				newline

					outstr "Parent 2: "
 00000710			Out4:
					
 00000710  BA 00000000			mov edx, 0
 00000715  BE 00000000			mov esi, 0
 0000071A  8B 0D 00000019 R		mov ecx, N
 00000720			L3:
 00000720  8B 86 00000BB1 R		mov eax, Parent_2 [esi]
 00000726  F7 35 00000019 R		div N ; чтобы получить индекс от 0 до N-1
 0000072C  89 96 00000BB1 R		mov Parent_2 [esi], edx
					
 00000732  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000739  75 52		jne Out44

					outword Parent_2 [esi], , " " 
					
 0000078D			Out44:	
 0000078D  83 C6 04			add esi, 4
 00000790  E2 8E			loop L3

				newline
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;Генерация массива битов для одноточечного скрещивания;;;;;;;;;;;;;;;;;;;
 00000848  B8 00000004			mov eax, 4
 0000084D  F7 25 00000019 R		mul N
 00000853  83 E8 04			sub eax, 4
 00000856  8B D8			mov ebx, eax; индекс последнего элемента Parent_2
					
 00000858  8B 93 00000BB1 R		mov edx,  Parent_2[ebx] ; последний элемент Parent_2
 0000085E  89 15 00000BD9 R		mov Bit[0], edx
 00000864  8D 1D 00000BD9 R		lea ebx, Bit
 0000086A  A1 00000019 R		mov eax, N ; количество элементов массива Bit
					
 0000086F  53				push ebx ; адрес массива Bit
 00000870  50				push eax ; 
					
 00000871  E8 00000000 E		Call Gen@0
					
 00000876  58				pop eax
 00000877  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;Генерация массива битов для МУТАЦИИ;;;;;;;;;;;;;;;;;;;
 00000878  B8 00000004			mov eax, 4
 0000087D  F7 25 00000019 R		mul N
 00000883  83 E8 04			sub eax, 4
 00000886  8B D8			mov ebx, eax; индекс последнего элемента Bit
					
 00000888  8B 93 00000BD9 R		mov edx, Bit [ebx] ; последний элемент Bit
 0000088E  89 15 00000C01 R		mov Bit_M[0], edx
 00000894  8D 1D 00000C01 R		lea ebx, Bit_M
 0000089A  A1 00000019 R		mov eax, N ; количество элементов массива Bit_M
					
 0000089F  53				push ebx ; адрес массива Bit_M
 000008A0  50				push eax ; 
					
 000008A1  E8 00000000 E		Call Gen@0
					
 000008A6  58				pop eax
 000008A7  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;Генерация вероятности для Мутации;;;;;;;;;;;;;;;;;;;;;;;;
					
 000008A8  B8 00000004			mov eax, 4
 000008AD  F7 25 00000019 R		mul N
 000008B3  83 E8 04			sub eax, 4
 000008B6  8B D8			mov ebx, eax; индекс последнего элемента Bit_M
					
 000008B8  8B 93 00000C01 R		mov edx, Bit_M [ebx] ; последний элемент Bit_M
 000008BE  89 15 00000EF9 R		mov Probability_M[0], edx
 000008C4  8D 1D 00000EF9 R		lea ebx, Probability_M
 000008CA  A1 00000019 R		mov eax, N ; количество элементов массива Probability_M
					
 000008CF  53				push ebx ; адрес массива Probability_M
 000008D0  50				push eax ; 
					
 000008D1  E8 00000000 E		Call Gen@0
					
 000008D6  58				pop eax
 000008D7  5B				pop ebx
					
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;Преобразование и вывод массива Bit по модулю 160;;;;;;;;;;;;;;;;;;;;;;;;
 000008D8  83 3D 00000021 R	cmp Mode_r, 0
	   00
 000008DF  75 35		jne Out5
					
					outstr "Bit: "
 00000916			Out5:
					
 00000916  BA 00000000			mov edx, 0
 0000091B  BE 00000000			mov esi, 0
 00000920  8B 0D 00000019 R		mov ecx, N
 00000926			L4:
 00000926  8B 86 00000BD9 R		mov eax, Bit [esi]
 0000092C  BB 000000A0			mov ebx, 160
 00000931  F7 F3			div ebx ; деление на 160, чтобы получить значение от 0 до 159. 160 - это количество битов в строке 5*dd
 00000933  89 96 00000BD9 R		mov Bit[esi], edx
					
 00000939  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000940  75 52		jne Out6
					outword Bit[esi], , " " 
 00000994			Out6:
 00000994  83 C6 04			add esi, 4
 00000997  E2 8D			loop L4
				newline
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;Преобразование и вывод массива Bit_M по модулю 160;;;;;;;;;;;;;;;;;;;;;;;;
 00000A4F  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000A56  75 35		jne Out7	
					outstr "Bit_M: "
 00000A8D			Out7:
 00000A8D  BA 00000000			mov edx, 0
 00000A92  BE 00000000			mov esi, 0
 00000A97  8B 0D 00000019 R		mov ecx, N
 00000A9D			L44:
 00000A9D  8B 86 00000C01 R		mov eax, Bit_M [esi]
 00000AA3  BB 000000A0			mov ebx, 160
 00000AA8  F7 F3			div ebx; деление на 160, чтобы получить значение от 0 до 159. 160 - это количество битов в строке 5*dd
 00000AAA  89 96 00000C01 R		mov Bit_M[esi], edx
					
 00000AB0  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000AB7  75 52		jne Out8
					outword Bit_M[esi], , " " 
 00000B0B			Out8:
 00000B0B  83 C6 04			add esi, 4
 00000B0E  E2 8D			loop L44
				newline
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;Преобразование и вывод массива Probability_M по модулю 2;;;;;;;;;;;;;;;;;;;;;;;;

 00000BC6  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000BCD  75 35		jne Out9

					outstr "Probability_M: "
 00000C04			Out9:

 00000C04  BA 00000000			mov edx, 0
 00000C09  BE 00000000			mov esi, 0
 00000C0E  8B 0D 00000019 R		mov ecx, N
 00000C14			L444:
 00000C14  8B 86 00000EF9 R		mov eax, Probability_M [esi]
 00000C1A  BB 00000002			mov ebx, 2
 00000C1F  F7 F3			div ebx ; делим на 2, чтобы получить 50% вероятность мутации. Можем менять вероятность, как хотим.
 00000C21  89 96 00000EF9 R		mov Probability_M [esi], edx
					
 00000C27  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000C2E  75 52		jne Out10

					outword Probability_M [esi], , " " 
 00000C82			Out10:

 00000C82  83 C6 04			add esi, 4
 00000C85  E2 8D			loop L444

				newline

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;;;;;;;;Скрещивание;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 	
				;;;;;;;;;;;;;;;;;;;;;;;;;Скрещивание;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
				;;;;;;;;;;;;;;;;;;;;;;;;;Скрещивание;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 	
 00000D3D  C7 05 00000029 R		mov Index_child, 0
	   00000000

 00000D47  8B 0D 00000019 R		mov ecx, N
 00000D4D  BB 00000000			mov ebx, 0
					
 00000D52			L5:
 00000D52  8B 83 00000B89 R		mov eax, Parent_1[ebx] 
 00000D58  F7 25 00000025 R		mul X_20 ; умножаем на 20 поскольку особи (строки) стоя друг от друга на 20 байт
 00000D5E  8B F8			mov edi, eax ;i_1-я строка Osobi
 00000D60  8B 83 00000BB1 R		mov eax, Parent_2 [ebx]
 00000D66  F7 25 00000025 R		mul X_20 
 00000D6C  8B D0			mov edx, eax ;i_2-я строка Osobi
					
 00000D6E  8B 83 00000BD9 R		mov eax, Bit[ebx] ;Запоминаем номер бита для скрещивания
 00000D74  53				push ebx ; Запоминаем индексы рассматриваемой пары родителей 
					
 00000D75  8B DF			mov ebx, edi ;i_1-я строка Osobi
 00000D77  8B EA			mov ebp, edx ;i_2-я строка Osobi
					
 00000D79  BE 00000010			mov esi, 16 ; j_1-й столбец i_1-й строки Osobi или i_2-й строки Osobi
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;Выделение целых элементов двойных слов с конца;;;;;;;;;;;;; 
 00000D7E  83 F8 20		L6: cmp eax, 32
 00000D81  7C 37			jl Change_byte ; Если < 32, то прыгаем к одноточечному скрещиванию
 00000D83  8B 94 1E			mov edx, Osobi[ebx][esi] ; Запоминаем элемент из Parent_1
	   00000035 R
 00000D8A  53				push ebx ; Запоминаем номер строки Parent_1
 00000D8B  8B 1D 00000029 R		mov ebx, Index_child
 00000D91  89 94 1E			mov Children[ebx][esi], edx ; С конца 1-го ребенка записываем часть Parent_1 в виде двойного слова
	   000009F9 R
 00000D98  8B 94 2E			mov edx, Osobi[ebp][esi] ; Запоминаем элемент из Parent_2
	   00000035 R
 00000D9F  55				push ebp  ; Запоминаем номер строки Parent_2
 00000DA0  8B 2D 00000029 R		mov ebp, Index_child
 00000DA6  83 C5 14			add ebp, 20 ; Переходим ко 2-му ребенку, т.е. перепрыгиваем через одну строку
 00000DA9  89 94 2E			mov Children[ebp][esi], edx ; С конца 2-го ребенка записываем часть Parent_2 в виде двойного слова
	   000009F9 R
 00000DB0  83 E8 20			sub eax, 32 ; уменьшаем сгенерированный номер бита на 32
 00000DB3  83 EE 04			sub esi, 4 ; переходим справа налево к следующему столбцу i-й строки в Parent_1 и Parent_2
 00000DB6  5D				pop ebp
 00000DB7  5B				pop ebx
 00000DB8  EB C4			jmp L6
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;Одноточечное скрещивание;;;;;;;;;;;;; 	
 00000DBA			Change_byte:

 00000DBA  51				push ecx; запомнили ecx для циклов
 00000DBB  8A C8			mov cl, al ; al = оставшемуся биту после цикла выделения полных двойных слов 
 00000DBD  BA 00000001			mov edx, 1 
 00000DC2  D3 E2			shl edx, cl
 00000DC4  83 EA 01			sub edx, 1 ; маска1 с единицами в конце путем перехода в нижние разряды с помощью вычитания одного бита
 00000DC7  8B FA			mov edi, edx
 00000DC9  F7 D7			not edi    ; маска2 с единицами в начале
					
					;Маска1 отвечает за правую половину родителя: 000..001111 (=15)
					;Маска2 отвечает за левую половину родителя:  11...110000
					
 00000DCB  50				push eax ; Запоминаем оставшийся бит
					   
 00000DCC  8B 84 1E			mov  eax, Osobi[ebx][esi] ; Запоминаем элемент Parent_1 для о/с 
	   00000035 R
 00000DD3  8B 8C 2E			mov  ecx, Osobi[ebp][esi] ; Запоминаем элемент Parent_2 для о/с 
	   00000035 R
					
 00000DDA  A3 0000002D R		mov tmp1, eax ; Временно запоминаем элемент Parent_1 для о/с 
 00000DDF  21 15 0000002D R		and tmp1, edx ; Получаем правую часть элемента Parent_1
 00000DE5  89 0D 00000031 R		mov tmp2, ecx ; Временно запоминаем элемент Parent_2 для о/с 
 00000DEB  21 3D 00000031 R		and tmp2, edi ; Получаем левую часть элемента Parent_2
 00000DF1  A1 0000002D R		mov eax, tmp1 ; Кладем правую часть элемента Parent_1
 00000DF6  0B 05 00000031 R		or eax, tmp2   ; Скрещиваем правую часть элемента Parent_1 и левую часть элемента Parent_2
					
 00000DFC  53				push ebx ; Запоминаем строку Parent_1 
 00000DFD  8B 1D 00000029 R		mov ebx, Index_child
 00000E03  89 84 1E			mov Children[ebx][esi], eax ; Кладем скрещенный элемент в 1-го Children
	   000009F9 R
					
 00000E0A  5B				pop ebx
					
 00000E0B  8B 84 1E			mov  eax, Osobi[ebx][esi] ; Запоминаем элемент Parent_1 для о/с 
	   00000035 R
 00000E12  8B 8C 2E			mov  ecx, Osobi[ebp][esi]  ; Запоминаем элемент Parent_2 для о/с 
	   00000035 R
					
 00000E19  A3 0000002D R		mov tmp1, eax ; Временно запоминаем элемент Parent_1 для о/с 
 00000E1E  21 3D 0000002D R		and tmp1, edi ; Получаем левую часть элемента Parent_1
 00000E24  89 0D 00000031 R		mov tmp2, ecx ; Временно запоминаем элемент Parent_2 для о/с 
 00000E2A  21 15 00000031 R		and tmp2, edx ; Получаем правую часть элемента Parent_2
 00000E30  A1 0000002D R		mov eax, tmp1 ; Кладем левую часть элемента Parent_1
 00000E35  0B 05 00000031 R		or eax, tmp2 ; Скрещиваем левую часть элемента Parent_1 и правую часть элемента Parent_2
					
 00000E3B  53				push ebx ; Запоминаем строку Parent_1 
 00000E3C  8B 1D 00000029 R		mov ebx, Index_child
 00000E42  83 C3 14			add ebx, 20
 00000E45  89 84 1E			mov Children[ebx][esi], eax  ; Кладем скрещенный элемент во 2-го Children
	   000009F9 R
 00000E4C  5B				pop ebx
					
 00000E4D  83 EE 04			sub esi, 4 ; переходим к следующещму столбцу
					
 00000E50  58				pop eax
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;Выделение целых элементов двойных слов с конца после о/с, если имеет место быть;;;;;;;;;;;;; 	
 00000E51  83 FE 00		L7: cmp esi, 0
 00000E54  7C 34			jl FIN
					
 00000E56  8B 94 1E			mov edx, Osobi[ebx][esi] ; Запоминаем следующий после о/с элемент Parent_1
	   00000035 R
 00000E5D  53				push ebx ; Запоминаем номер строки Parent_1
 00000E5E  8B 1D 00000029 R		mov ebx, Index_child
 00000E64  83 C3 14			add ebx, 20 ; Переходим ко 2-му ребенку, т.е. перепрыгиваем через одну строку
 00000E67  89 94 1E			mov Children[ebx][esi], edx  ; Записываем во 2-го ребенка записываем следующее после о/с двойное слово Parent_1 
	   000009F9 R
 00000E6E  8B 94 2E			mov edx, Osobi[ebp][esi] ; Запоминаем следующий после о/с элемент Parent_2
	   00000035 R
 00000E75  55				push ebp ; Запоминаем номер строки Parent_2
 00000E76  8B 2D 00000029 R		mov ebp, Index_child ; первый ребенок
					
 00000E7C  89 94 2E			mov Children[ebp][esi], edx ; Записываем во 1-го ребенка записываем следующее после о/с двойное слово Parent_2
	   000009F9 R
 00000E83  83 EE 04			sub esi, 4 ; Переходим к след. столбцу
 00000E86  5D				pop ebp
 00000E87  5B				pop ebx
 00000E88  EB C7			jmp L7	
					
 00000E8A			FIN:	
 00000E8A  59				pop ecx
 00000E8B  83 05 00000029 R		add Index_child, 40 ; пропускаем 2-х Children, чтобы перейти к детям следующей пары
	   28
 00000E92  5B				pop ebx ; Выводим из стека индекс пары родителей
 00000E93  83 C3 04			add ebx, 4 ; переходим к следующей паре  Parent'ов
 00000E96  83 E9 01			sub ecx, 1
 00000E99  83 F9 00			cmp ecx, 0
 00000E9C  7E 05			jle FF
 00000E9E  E9 FFFFFEAF			jmp L5 ; Повторяем процесс скрещивания для следующей пары родителей
					
 00000EA3			FF:

				newline
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;Печать массива Children;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000F59  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00000F60  0F 85 00000271	jne Out11

				outstrln "Children:"

 00001051  8D 1D 000009F9 R		lea ebx, Children
 00001057  A1 00000019 R		mov eax, N ; передача количества N строк
 0000105C  03 05 00000019 R		add eax, N ; 2 N детей
					
 00001062  53				push ebx ; Запоминаем адрес массива Children
 00001063  50				push eax  ; Запоминаем количество строк
					
 00001064  E8 00000000 E		Call Print@0
					
 00001069  58				pop eax
 0000106A  5B				pop ebx
					
					newline
					newline
					
 000011D7			Out11:	
				;;;;;;;;;;;;;;;;;;;Создание большого массива All_ с целью объединения массивов;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;;;;;;;;;;;;;;;;;; объединения массивов Osobi и Children;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000011D7  B8 00000005			mov eax, 5 ; 5 столбцов
 000011DC  F7 25 00000019 R		mul N
 000011E2  8B C8			mov ecx, eax
 000011E4  BB 00000000			mov ebx, 0
 000011E9			L10:
 000011E9  8B 83 00000035 R		mov eax, Osobi[ebx]
 000011EF  89 83 00000C29 R		mov All_[ebx], eax
 000011F5  83 C3 04			add ebx, 4
 000011F8  E2 EF			loop L10
					
 000011FA  B8 0000000A			mov eax, 10 ; Потому что Children = 2N
 000011FF  F7 25 00000019 R		mul N
 00001205  8B C8			mov ecx, eax
 00001207  BD 00000000			mov ebp, 0
 0000120C			L11:
 0000120C  8B 85 000009F9 R		mov eax, Children[ebp]
 00001212  89 83 00000C29 R		mov All_[ebx], eax
 00001218  83 C5 04			add ebp, 4
 0000121B  83 C3 04			add ebx, 4
 0000121E  E2 EC			loop L11
					
 00001220  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00001227  0F 85 000001BB	jne Out12	

 0000122D  8D 1D 00000C29 R		lea ebx, All_
 00001233  B8 00000003			mov eax, 3
 00001238  F7 25 00000019 R		mul N 
					
 0000123E  53				push ebx ; Запоминаем адрес массива All_
 0000123F  50				push eax  ; Запоминаем количество строк	
					outstrln "Crossing_(All_: Osobi + Children): "
 0000132B  E8 00000000 E		call Print@0
					
 00001330  58				pop eax
 00001331  5B				pop ebx
					newline
 000013E8			Out12:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;;;;;;;Расчёт уравнения по всем особям, включая детей;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
 000013E8  B8 00000003			mov eax, 3 ; Потому что 3N особей
 000013ED  F7 25 00000019 R		mul N 
 000013F3  8B C8			mov ecx, eax
 000013F5  BD 00000000			mov ebp,0
 000013FA  BE 00000000			mov esi, 0
 000013FF			L12:
 000013FF  8D 9D 00000C29 R		lea ebx, All_[ebp]
 00001405  53				push ebx
				    
 00001406  E8 00000000 E		Call Diophant@0
					
 0000140B  89 86 00000E81 R		mov Answers [esi], eax
 00001411  83 C5 14			add ebp, 20
 00001414  83 C6 04			add esi, 4
 00001417  E2 E6			loop L12
					
 00001419  5B				pop ebx
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;;;;;;;;;;;;Печать результатов расчёта уравнения;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000141A  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00001421  0F 85 0000020B	jne Out13

 00001427  BB 00000000			mov ebx, 0
 0000142C  51				push ecx
 0000142D  B8 00000003			mov eax, 3
 00001432  F7 25 00000019 R		mul N
 00001438  8B C8			mov ecx, eax
					outstrln "Answer: "
 00001525			L20:
				 
					outword Answers[ebx], , " "
 00001577  83 C3 04			add ebx, 4
 0000157A  E2 A9			loop L20
					
				newline
 00001632			Out13:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;Зануление массива Osobi;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
 00001632  B8 00000005			mov eax, 5
 00001637  F7 25 00000019 R		mul N
 0000163D  8B C8			mov ecx, eax
 0000163F  BB 00000000			mov ebx, 0 
 00001644			L13:
 00001644  C7 83 00000035 R		mov Osobi[ebx], 0
	   00000000
 0000164E  83 C3 04			add ebx, 4
 00001651  E2 F1			Loop L13
					
				newline
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


 00001709  BE 00000000			 mov esi, 0 ;индекс строки из Osobi , который будем заполнять
 0000170E  8B 0D 00000019 R		 mov ecx, N ; Количество минимальных особей после расчёта уравнения

				;;;;;;;;;;;;;;;;;;;;;;;;;;Селекция;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00001714			N_min_str:
					 ;;;;;;;;;;;;;;;;;;;;;Find Minimun & index of min elem;;;;;;;;;;;;;;
 00001714  BB 00000000			 mov ebx, 0
					 
 00001719  B8 00000003			 mov eax, 3 ; 3N особей
 0000171E  F7 25 00000019 R		 mul N
 00001724  83 E8 01			 sub eax, 1
					 
 00001727  51				 push ecx  ; сохраняем ecx для внешнего цикла заполнения массива Osobi 
 00001728  8B C8			 mov ecx, eax
 0000172A  BD 00000000			 mov ebp, 0
					
 0000172F  8B 83 00000E81 R		 mov eax, Answers [ebx] ; eax хранит число минимума
 00001735  83 C3 04			 add ebx, 4
 00001738			L14:
 00001738  3B 83 00000E81 R		 cmp eax, Answers [ebx] ; сравниваем текущий минимум со следующим элементом
 0000173E  76 08			 jbe L15
 00001740  8B 83 00000E81 R		 mov eax, Answers [ebx] ; присваиваем eax новый числовой минимум
 00001746  8B EB			 mov ebp, ebx ; сохраняем индексовый номер минимума
					 
 00001748			L15:
 00001748  83 C3 04			 add  ebx, 4
 0000174B  E2 EB			 loop L14

					newline

					;ebp - байтовый индекс элемента в Answers
					;ebp/4, номер строки в All_
					;ebp/4 * 20 = ebp * 5 - номер байта в All_
					
 00001803  83 BD 00000E81 R		cmp Answers [ebp], 0 ; Ответ найден
	   00
 0000180A  0F 84 0000047F		je finish3
					
 00001810  C7 85 00000E81 R		mov Answers [ebp], -1 ; Answers[index_min] := Max_integer
	   FFFFFFFF
					                      ; Максимизируем найденный минимум, чтобы
					                      ; ислкючить его из дальнейших циклов
										  
					;;;;;;;;;;;;;;;;;;;;;;;;Osobi[k] := All_[index_min];;;;;;;;;;;;;;;;;;;;;
					;;;;;;;;;;;;;;;;;;Записываем найденный индекс минимального;;;;;;;;;;;;;;;
					;;;;;;;;;;;;;;;;;;;;;;;;;элемента в массив Osobi;;;;;;;;;;;;;;;;;;;;;
 0000181A  B8 00000005			mov eax, 5
 0000181F  F7 E5			mul ebp
					
 00001821  8B E8			mov ebp, eax ; номер строки минимального элемента в All_
 00001823  BF 00000000			mov edi, 0
 00001828  B9 00000005			mov ecx, 5 ; количество столбцов
 0000182D			L16: 	
 0000182D  8B 84 2F			mov eax, All_ [ebp][edi] ; записываем 1-е значение минимальной строчки
	   00000C29 R
 00001834  C7 84 2F			mov All_ [ebp][edi], 0 ; обнуление строки массива All_
	   00000C29 R
	   00000000
 0000183F  89 86 00000035 R		mov Osobi [esi], eax ; записываем 1-е значение минимальной строчки в массив Osobi
 00001845  83 C6 04			add esi, 4
 00001848  83 C7 04			add edi, 4
 0000184B  E2 E0			loop L16
					
 0000184D  59				pop ecx ; Возвращаем  ecx для внешнего цикла заполнения массива Osobi 
 0000184E  83 E9 01			sub ecx,1 ; 
 00001851  83 F9 00			cmp ecx, 0
 00001854  7E 05			jle AA
 00001856  E9 FFFFFEB9			jmp N_min_str

 0000185B			AA:

 0000185B  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00001862  0F 85 000001B5	jne Out14
					
 00001868  8D 1D 00000035 R		lea ebx, Osobi
 0000186E  A1 00000019 R		mov eax, N ; передача количества N строк
					
 00001873  53				push ebx
 00001874  50				push eax
					
					outstrln "After Selection: "
 00001960  E8 00000000 E		Call Print@0
					
 00001965  58				pop eax
 00001966  5B				pop ebx
					
					newline
 00001A1D			Out14:	
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;;;;Поиск нужного двойного слова для мутации бита;;;;;;;;;;;;;;;;; 		

 00001A1D  BB 00000000			mov ebx, 0
 00001A22  BF 00000000			mov edi, 0
 00001A27  8B 0D 00000019 R		mov ecx, N
 00001A2D			L18:
					;cmp Probability_M[edi], 1 ; Анализируем будет ли мутация или нет. 1 - значит будет
					;jne L19
					
 00001A2D  8B 87 00000C01 R		mov eax, Bit_M [edi] ; первый элемент Bit_M 
					
 00001A33  51				push ecx ; запомнили ecx
 00001A34  BE 00000010			mov esi, 16 ; 4-й столбец строки. Идёт осчёт с конца строки.
 00001A39  B9 00000005			mov ecx, 5 ; число столбцов
 00001A3E			L17:
 00001A3E  83 F8 20			cmp eax, 32
 00001A41  7C 08			jl Mut 
 00001A43  83 E8 20			sub eax, 32
					
					;mov eax, Osobi [ebx][esi]
 00001A46  83 EE 04			sub esi, 4 ; следующий столбец
 00001A49  EB F3			jmp L17
					
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
					
				;;;;;;;;;;;;;;;;;;;;;;Мутация;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 	

 00001A4B			Mut:

					;eax - номер бита, который надо изменить в каком-то из 5-ти элементов
 00001A4B  BA 00000000			mov edx, 0
 00001A50  BD 00000008			mov ebp, 8 ; чтобы оставаться в пределах байта (мутировать младшие 8 бит у какого-то столбца из строки)
 00001A55  F7 F5			div ebp
					
 00001A57  8B AC 1E			mov ebp, Osobi[ebx][esi]
	   00000035 R
					
 00001A5E  55				push ebp
 00001A5F  52				push edx
					
 00001A60  E8 00000000 E		call Mutacia@0
					
 00001A65  5A				pop edx
 00001A66  5D				pop ebp
					
					;outwordln  eax, , "eax="
					
 00001A67  89 84 1E			mov Osobi[ebx][esi], eax
	   00000035 R
					
 00001A6E  59				pop ecx 
					
 00001A6F			L19:
 00001A6F  83 C3 14			add ebx, 20 ; следующая строка
 00001A72  83 C7 04			add edi, 4
 00001A75  83 E9 01			sub ecx, 1
 00001A78  83 F9 00			cmp ecx, 0
 00001A7B  7E 02			jle KK  
 00001A7D  EB AE			jmp L18
					
 00001A7F			KK:

					
 00001A7F  8D 1D 00000035 R		lea ebx, Osobi
 00001A85  A1 00000019 R		mov eax, N ; передача количества N строк
					
 00001A8A  53				push ebx
 00001A8B  50				push eax
					
 00001A8C  83 3D 00000021 R	cmp Mode_r, 0
	   00
 00001A93  0F 85 000000F0	jne Out15	

					outstrln "After Mutation: "
 00001B84  E8 00000000 E		Call Print@0
					
 00001B89			Out15:

 00001B89  58				pop eax
 00001B8A  5B				pop ebx
					
					newline
					
 00001C41  83 2D 0000001D R		sub M, 1
	   01
 00001C48  83 3D 0000001D R		cmp M, 0
	   00
 00001C4F  0F 87 FFFFE7E7	    ja BEGIN
					outstr "Otvet ne naiden!"
 00001C8A  E9 0000008B			jmp finish1
					
 00001C8F			finish3:
					
 00001C8F  8B C5			mov eax, ebp
 00001C91  BD 00000005		    mov ebp, 5 ; приводим в соответствие индексы массивов Answers и All_
 00001C96  F7 E5			mul ebp
 00001C98  8B E8			mov ebp, eax
					
 00001C9A  B8 00000001			mov eax, 1 ; будем выводить одну строку
					
 00001C9F  8D 9D 00000C29 R		lea ebx, All_[ebp]
					
 00001CA5  53				push ebx
 00001CA6  50				push eax
					
					outstr  "Pravilnii otvet = "
					
 00001CDC  E8 00000000 E		call Print@0
					
 00001CE1  58				pop eax
 00001CE2  5B				pop ebx
 00001CE3  EB 35			jmp finish1

 00001CE5			finish2: 
					outstr "Vvedeno nepravel'noe N"
 00001D1A			finish1:
					exit
				   end Start
				   
				  
				   ; N=5, elem = 2, M=1            a = 1,1,1,1,1    d = 317
				    ; N=5, elem = 5, M=2            a = 1,1,1,1,1    d = 317
				   ; N=5, elem = 5, M=5            a = 1,1,1,1,1    d = 300
				  
				  
				  ;;;;;;;;;;;;;;Селекция;;;;;;;;;;;
					;N children
					
					;N pairs
					
					;2 вспомогательных массива для родителей
					;Заполняем рандомными числами
					;Их делим по модулю N, чтобы не выйти за границу количества родителей
					;Попарно скрещиваем родителей 
					
					;1 4 2 7 1 4
					;3 5 1 10 2 3
				   
				   
				   ;COMMENT ^
					;х = 100 бит
					;скрещиваем 1 и 3 особь
					;1: 3 9 27 81 44
					;3: 132 197 193 181 145
					
					;Нужна матрица с детьми
					;Всего 160 бит
					;100-32>=0
					;последний байт кладем в ребенка, #4
					;100-32=68
					;68-32>=0
					;предпоследний идет в ребенка, #3
					;68-32=36
					;36-32>=0
					;предпредпоследний, #2
					;36-32=4
					
					;0<4< 32, stop, байт #1
					;Т.е. обмениваем половинки 9 и 197
					;Маска1 отвечает за правую половину 1 родителя: 000..001111 (=15)
					;Маска2 отвечает за левую половину 2 родителя:  11...110000
					
					;Получить единицы на последних местах
					;(1 << 4) - 1: 
					;00000001
					;00010000 (=16)
					;00001111
					
					;Получить последние 4 бита у 9:
					;a = 9 and 00001111
					;Получить первые 28 бит у 9:
					;b = 9 and (not 00001111)
					
					;Получить последние 4 бита у 197:
					;c = 197 and 00001111
					;Получить первые 28 бит у 197:
					;d = 197 and (not 00001111)
					
					;Собрать из двух половин новые числа: d_a, b_c
					;d_a: d or a
					;b_c: b or c
					
					;Положим в массив
					
					;Получить оставшиеся элементы:
					;32 - 4 = 28
					;160-100 = 60
					;60 - 28 = 32
					
					;Некий цикл, записывать оставшиеся байты родителей в детей
					;Всего 32 бита
					;32-32>=0
					;Кладем этот элемент в ребенка
					;32-32=0
					;0-32 >=0?, stop
					;^  
					
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
					
					;;;;;Сохранить все значимые особи (без 0-х) в массив All_ 
					;;;;;Считаем Diophant для каждой особи и кладем результат в Answers
					; Обнулить Osobi
					; Найти N минимальных особей по коэффициенту из Answers 
					; и положить их в Osobi, так получим новое поколение
				;;;;;;;;;;;;;;;;;Перенос элементов Osobi и Children в отдельный массив All_;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
Microsoft (R) Macro Assembler Version 6.14.8444		    09/11/21 19:19:45
a.asm							     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000350F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00001D22 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000EFE _DATA	
??0001 . . . . . . . . . . . . .	Text   	 "
??0002 . . . . . . . . . . . . .	Byte	 00000EFD _DATA	
??0004 . . . . . . . . . . . . .	L Near	 0000002B _TEXT	
??0005 . . . . . . . . . . . . .	Number	 00000000h   
??0006 . . . . . . . . . . . . .	Byte	 00000F0D _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00000F10 _DATA	
??0009 . . . . . . . . . . . . .	Text   	 o
??000A . . . . . . . . . . . . .	Byte	 00000F0F _DATA	
??000B . . . . . . . . . . . . .	L Near	 00000050 _TEXT	
??000C . . . . . . . . . . . . .	L Near	 00000086 _TEXT	
??000D . . . . . . . . . . . . .	Number	 00000000h   
??000E . . . . . . . . . . . . .	Byte	 00000FD8 _DATA	
??0010 . . . . . . . . . . . . .	Byte	 00000FDB _DATA	
??0011 . . . . . . . . . . . . .	Text   	 o
??0012 . . . . . . . . . . . . .	Byte	 00000FDA _DATA	
??0013 . . . . . . . . . . . . .	L Near	 000000AB _TEXT	
??0014 . . . . . . . . . . . . .	L Near	 000000E1 _TEXT	
??0015 . . . . . . . . . . . . .	Number	 00000000h   
??0016 . . . . . . . . . . . . .	DWord	 000010A3 _DATA	
??0017 . . . . . . . . . . . . .	Byte	 000010A8 _DATA	
??0018 . . . . . . . . . . . . .	Text   	 "
??0019 . . . . . . . . . . . . .	Byte	 000010A7 _DATA	
??001B . . . . . . . . . . . . .	L Near	 00000116 _TEXT	
??001C . . . . . . . . . . . . .	Byte	 000010AD _DATA	
??001D . . . . . . . . . . . . .	L Near	 0000013D _TEXT	
??001E . . . . . . . . . . . . .	Byte	 000010AF _DATA	
??001F . . . . . . . . . . . . .	Text   	 "
??0020 . . . . . . . . . . . . .	Byte	 000010AE _DATA	
??0022 . . . . . . . . . . . . .	L Near	 0000019C _TEXT	
??0023 . . . . . . . . . . . . .	Number	 00000000h   
??0024 . . . . . . . . . . . . .	Byte	 000010C7 _DATA	
??0026 . . . . . . . . . . . . .	Byte	 000010CA _DATA	
??0027 . . . . . . . . . . . . .	Text   	 o
??0028 . . . . . . . . . . . . .	Byte	 000010C9 _DATA	
??0029 . . . . . . . . . . . . .	L Near	 000001C1 _TEXT	
??002A . . . . . . . . . . . . .	L Near	 000001F7 _TEXT	
??002B . . . . . . . . . . . . .	Number	 00000000h   
??002C . . . . . . . . . . . . .	Byte	 00001192 _DATA	
??002E . . . . . . . . . . . . .	Byte	 00001195 _DATA	
??002F . . . . . . . . . . . . .	Text   	 o
??0030 . . . . . . . . . . . . .	Byte	 00001194 _DATA	
??0031 . . . . . . . . . . . . .	L Near	 0000021C _TEXT	
??0032 . . . . . . . . . . . . .	L Near	 00000252 _TEXT	
??0033 . . . . . . . . . . . . .	Number	 00000000h   
??0034 . . . . . . . . . . . . .	DWord	 0000125D _DATA	
??0035 . . . . . . . . . . . . .	Byte	 00001262 _DATA	
??0036 . . . . . . . . . . . . .	Text   	 "
??0037 . . . . . . . . . . . . .	Byte	 00001261 _DATA	
??0039 . . . . . . . . . . . . .	L Near	 00000287 _TEXT	
??003A . . . . . . . . . . . . .	Byte	 00001267 _DATA	
??003B . . . . . . . . . . . . .	L Near	 000002AE _TEXT	
??003C . . . . . . . . . . . . .	Byte	 00001269 _DATA	
??003D . . . . . . . . . . . . .	Text   	 "
??003E . . . . . . . . . . . . .	Byte	 00001268 _DATA	
??0040 . . . . . . . . . . . . .	L Near	 000002F3 _TEXT	
??0041 . . . . . . . . . . . . .	Number	 00000000h   
??0042 . . . . . . . . . . . . .	Byte	 000012B7 _DATA	
??0044 . . . . . . . . . . . . .	Byte	 000012BA _DATA	
??0045 . . . . . . . . . . . . .	Text   	 o
??0046 . . . . . . . . . . . . .	Byte	 000012B9 _DATA	
??0047 . . . . . . . . . . . . .	L Near	 00000318 _TEXT	
??0048 . . . . . . . . . . . . .	L Near	 0000034E _TEXT	
??0049 . . . . . . . . . . . . .	Number	 00000000h   
??004A . . . . . . . . . . . . .	Byte	 00001382 _DATA	
??004C . . . . . . . . . . . . .	Byte	 00001385 _DATA	
??004D . . . . . . . . . . . . .	Text   	 o
??004E . . . . . . . . . . . . .	Byte	 00001384 _DATA	
??004F . . . . . . . . . . . . .	L Near	 00000373 _TEXT	
??0050 . . . . . . . . . . . . .	L Near	 000003A9 _TEXT	
??0051 . . . . . . . . . . . . .	Number	 00000000h   
??0052 . . . . . . . . . . . . .	DWord	 0000144D _DATA	
??0053 . . . . . . . . . . . . .	Byte	 00001452 _DATA	
??0054 . . . . . . . . . . . . .	Text   	 "
??0055 . . . . . . . . . . . . .	Byte	 00001451 _DATA	
??0057 . . . . . . . . . . . . .	L Near	 000003DE _TEXT	
??0058 . . . . . . . . . . . . .	Byte	 0000145C _DATA	
??0059 . . . . . . . . . . . . .	L Near	 00000405 _TEXT	
??005A . . . . . . . . . . . . .	Number	 00000000h   
??005B . . . . . . . . . . . . .	Byte	 0000145D _DATA	
??005D . . . . . . . . . . . . .	Byte	 00001460 _DATA	
??005E . . . . . . . . . . . . .	Text   	 o
??005F . . . . . . . . . . . . .	Byte	 0000145F _DATA	
??0060 . . . . . . . . . . . . .	L Near	 000004BD _TEXT	
??0061 . . . . . . . . . . . . .	L Near	 000004F3 _TEXT	
??0062 . . . . . . . . . . . . .	Number	 00000000h   
??0063 . . . . . . . . . . . . .	Byte	 00001528 _DATA	
??0065 . . . . . . . . . . . . .	Byte	 0000152B _DATA	
??0066 . . . . . . . . . . . . .	Text   	 o
??0067 . . . . . . . . . . . . .	Byte	 0000152A _DATA	
??0068 . . . . . . . . . . . . .	L Near	 00000518 _TEXT	
??0069 . . . . . . . . . . . . .	L Near	 0000054E _TEXT	
??006A . . . . . . . . . . . . .	Byte	 000015F4 _DATA	
??006B . . . . . . . . . . . . .	Text   	 "
??006C . . . . . . . . . . . . .	Byte	 000015F3 _DATA	
??006E . . . . . . . . . . . . .	L Near	 0000058C _TEXT	
??006F . . . . . . . . . . . . .	Number	 0000000Ch   
??0070 . . . . . . . . . . . . .	Number	 0000000Dh   
??0071 . . . . . . . . . . . . .	Number	 00000000h   
??0072 . . . . . . . . . . . . .	Byte	 00001602 _DATA	
??007A . . . . . . . . . . . . .	Number	 00000004h   
??007C . . . . . . . . . . . . .	Byte	 00001600 _DATA	
??007D . . . . . . . . . . . . .	Text   	 "
??007E . . . . . . . . . . . . .	Byte	 000015FF _DATA	
??0080 . . . . . . . . . . . . .	L Near	 000005EC _TEXT	
??0081 . . . . . . . . . . . . .	Number	 00000000h   
??0082 . . . . . . . . . . . . .	Byte	 00001605 _DATA	
??0084 . . . . . . . . . . . . .	Byte	 00001608 _DATA	
??0085 . . . . . . . . . . . . .	Text   	 o
??0086 . . . . . . . . . . . . .	Byte	 00001607 _DATA	
??0087 . . . . . . . . . . . . .	L Near	 00000640 _TEXT	
??0088 . . . . . . . . . . . . .	L Near	 00000676 _TEXT	
??0089 . . . . . . . . . . . . .	Number	 00000000h   
??008A . . . . . . . . . . . . .	Byte	 000016D0 _DATA	
??008C . . . . . . . . . . . . .	Byte	 000016D3 _DATA	
??008D . . . . . . . . . . . . .	Text   	 o
??008E . . . . . . . . . . . . .	Byte	 000016D2 _DATA	
??008F . . . . . . . . . . . . .	L Near	 0000069B _TEXT	
??0090 . . . . . . . . . . . . .	L Near	 000006D1 _TEXT	
??0091 . . . . . . . . . . . . .	Byte	 0000179C _DATA	
??0092 . . . . . . . . . . . . .	Text   	 "
??0093 . . . . . . . . . . . . .	Byte	 0000179B _DATA	
??0095 . . . . . . . . . . . . .	L Near	 00000706 _TEXT	
??0096 . . . . . . . . . . . . .	Number	 0000000Ch   
??0097 . . . . . . . . . . . . .	Number	 0000000Dh   
??0098 . . . . . . . . . . . . .	Number	 00000000h   
??0099 . . . . . . . . . . . . .	Byte	 000017AA _DATA	
??00A1 . . . . . . . . . . . . .	Number	 00000004h   
??00A3 . . . . . . . . . . . . .	Byte	 000017A8 _DATA	
??00A4 . . . . . . . . . . . . .	Text   	 "
??00A5 . . . . . . . . . . . . .	Byte	 000017A7 _DATA	
??00A7 . . . . . . . . . . . . .	L Near	 00000766 _TEXT	
??00A8 . . . . . . . . . . . . .	Number	 00000000h   
??00A9 . . . . . . . . . . . . .	Byte	 000017AD _DATA	
??00AB . . . . . . . . . . . . .	Byte	 000017B0 _DATA	
??00AC . . . . . . . . . . . . .	Text   	 o
??00AD . . . . . . . . . . . . .	Byte	 000017AF _DATA	
??00AE . . . . . . . . . . . . .	L Near	 000007AD _TEXT	
??00AF . . . . . . . . . . . . .	L Near	 000007E3 _TEXT	
??00B0 . . . . . . . . . . . . .	Number	 00000000h   
??00B1 . . . . . . . . . . . . .	Byte	 00001878 _DATA	
??00B3 . . . . . . . . . . . . .	Byte	 0000187B _DATA	
??00B4 . . . . . . . . . . . . .	Text   	 o
??00B5 . . . . . . . . . . . . .	Byte	 0000187A _DATA	
??00B6 . . . . . . . . . . . . .	L Near	 00000808 _TEXT	
??00B7 . . . . . . . . . . . . .	L Near	 0000083E _TEXT	
??00B8 . . . . . . . . . . . . .	Byte	 00001944 _DATA	
??00B9 . . . . . . . . . . . . .	Text   	 "
??00BA . . . . . . . . . . . . .	Byte	 00001943 _DATA	
??00BC . . . . . . . . . . . . .	L Near	 0000090C _TEXT	
??00BD . . . . . . . . . . . . .	Number	 00000006h   
??00BE . . . . . . . . . . . . .	Number	 00000007h   
??00BF . . . . . . . . . . . . .	Number	 00000000h   
??00C0 . . . . . . . . . . . . .	Byte	 0000194D _DATA	
??00C8 . . . . . . . . . . . . .	Number	 00000004h   
??00CA . . . . . . . . . . . . .	Byte	 0000194B _DATA	
??00CB . . . . . . . . . . . . .	Text   	 "
??00CC . . . . . . . . . . . . .	Byte	 0000194A _DATA	
??00CE . . . . . . . . . . . . .	L Near	 0000096D _TEXT	
??00CF . . . . . . . . . . . . .	Number	 00000000h   
??00D0 . . . . . . . . . . . . .	Byte	 00001950 _DATA	
??00D2 . . . . . . . . . . . . .	Byte	 00001953 _DATA	
??00D3 . . . . . . . . . . . . .	Text   	 o
??00D4 . . . . . . . . . . . . .	Byte	 00001952 _DATA	
??00D5 . . . . . . . . . . . . .	L Near	 000009B4 _TEXT	
??00D6 . . . . . . . . . . . . .	L Near	 000009EA _TEXT	
??00D7 . . . . . . . . . . . . .	Number	 00000000h   
??00D8 . . . . . . . . . . . . .	Byte	 00001A1B _DATA	
??00DA . . . . . . . . . . . . .	Byte	 00001A1E _DATA	
??00DB . . . . . . . . . . . . .	Text   	 o
??00DC . . . . . . . . . . . . .	Byte	 00001A1D _DATA	
??00DD . . . . . . . . . . . . .	L Near	 00000A0F _TEXT	
??00DE . . . . . . . . . . . . .	L Near	 00000A45 _TEXT	
??00DF . . . . . . . . . . . . .	Byte	 00001AE7 _DATA	
??00E0 . . . . . . . . . . . . .	Text   	 "
??00E1 . . . . . . . . . . . . .	Byte	 00001AE6 _DATA	
??00E3 . . . . . . . . . . . . .	L Near	 00000A83 _TEXT	
??00E4 . . . . . . . . . . . . .	Number	 00000008h   
??00E5 . . . . . . . . . . . . .	Number	 00000009h   
??00E6 . . . . . . . . . . . . .	Number	 00000000h   
??00E7 . . . . . . . . . . . . .	Byte	 00001AF2 _DATA	
??00EF . . . . . . . . . . . . .	Number	 00000004h   
??00F1 . . . . . . . . . . . . .	Byte	 00001AF0 _DATA	
??00F2 . . . . . . . . . . . . .	Text   	 "
??00F3 . . . . . . . . . . . . .	Byte	 00001AEF _DATA	
??00F5 . . . . . . . . . . . . .	L Near	 00000AE4 _TEXT	
??00F6 . . . . . . . . . . . . .	Number	 00000000h   
??00F7 . . . . . . . . . . . . .	Byte	 00001AF5 _DATA	
??00F9 . . . . . . . . . . . . .	Byte	 00001AF8 _DATA	
??00FA . . . . . . . . . . . . .	Text   	 o
??00FB . . . . . . . . . . . . .	Byte	 00001AF7 _DATA	
??00FC . . . . . . . . . . . . .	L Near	 00000B2B _TEXT	
??00FD . . . . . . . . . . . . .	L Near	 00000B61 _TEXT	
??00FE . . . . . . . . . . . . .	Number	 00000000h   
??00FF . . . . . . . . . . . . .	Byte	 00001BC0 _DATA	
??0101 . . . . . . . . . . . . .	Byte	 00001BC3 _DATA	
??0102 . . . . . . . . . . . . .	Text   	 o
??0103 . . . . . . . . . . . . .	Byte	 00001BC2 _DATA	
??0104 . . . . . . . . . . . . .	L Near	 00000B86 _TEXT	
??0105 . . . . . . . . . . . . .	L Near	 00000BBC _TEXT	
??0106 . . . . . . . . . . . . .	Byte	 00001C8C _DATA	
??0107 . . . . . . . . . . . . .	Text   	 "
??0108 . . . . . . . . . . . . .	Byte	 00001C8B _DATA	
??010A . . . . . . . . . . . . .	L Near	 00000BFA _TEXT	
??010B . . . . . . . . . . . . .	Number	 00000011h   
??010C . . . . . . . . . . . . .	Number	 00000012h   
??010D . . . . . . . . . . . . .	Number	 00000000h   
??010E . . . . . . . . . . . . .	Byte	 00001C9F _DATA	
??0116 . . . . . . . . . . . . .	Number	 00000004h   
??0118 . . . . . . . . . . . . .	Byte	 00001C9D _DATA	
??0119 . . . . . . . . . . . . .	Text   	 "
??011A . . . . . . . . . . . . .	Byte	 00001C9C _DATA	
??011C . . . . . . . . . . . . .	L Near	 00000C5B _TEXT	
??011D . . . . . . . . . . . . .	Number	 00000000h   
??011E . . . . . . . . . . . . .	Byte	 00001CA2 _DATA	
??0120 . . . . . . . . . . . . .	Byte	 00001CA5 _DATA	
??0121 . . . . . . . . . . . . .	Text   	 o
??0122 . . . . . . . . . . . . .	Byte	 00001CA4 _DATA	
??0123 . . . . . . . . . . . . .	L Near	 00000CA2 _TEXT	
??0124 . . . . . . . . . . . . .	L Near	 00000CD8 _TEXT	
??0125 . . . . . . . . . . . . .	Number	 00000000h   
??0126 . . . . . . . . . . . . .	Byte	 00001D6D _DATA	
??0128 . . . . . . . . . . . . .	Byte	 00001D70 _DATA	
??0129 . . . . . . . . . . . . .	Text   	 o
??012A . . . . . . . . . . . . .	Byte	 00001D6F _DATA	
??012B . . . . . . . . . . . . .	L Near	 00000CFD _TEXT	
??012C . . . . . . . . . . . . .	L Near	 00000D33 _TEXT	
??012D . . . . . . . . . . . . .	Number	 00000000h   
??012E . . . . . . . . . . . . .	Byte	 00001E38 _DATA	
??0130 . . . . . . . . . . . . .	Byte	 00001E3B _DATA	
??0131 . . . . . . . . . . . . .	Text   	 o
??0132 . . . . . . . . . . . . .	Byte	 00001E3A _DATA	
??0133 . . . . . . . . . . . . .	L Near	 00000EBE _TEXT	
??0134 . . . . . . . . . . . . .	L Near	 00000EF4 _TEXT	
??0135 . . . . . . . . . . . . .	Number	 00000000h   
??0136 . . . . . . . . . . . . .	Byte	 00001F03 _DATA	
??0138 . . . . . . . . . . . . .	Byte	 00001F06 _DATA	
??0139 . . . . . . . . . . . . .	Text   	 o
??013A . . . . . . . . . . . . .	Byte	 00001F05 _DATA	
??013B . . . . . . . . . . . . .	L Near	 00000F19 _TEXT	
??013C . . . . . . . . . . . . .	L Near	 00000F4F _TEXT	
??013D . . . . . . . . . . . . .	Byte	 00001FCF _DATA	
??013E . . . . . . . . . . . . .	Text   	 "
??013F . . . . . . . . . . . . .	Byte	 00001FCE _DATA	
??0141 . . . . . . . . . . . . .	L Near	 00000F91 _TEXT	
??0142 . . . . . . . . . . . . .	Number	 00000000h   
??0143 . . . . . . . . . . . . .	Byte	 00001FD9 _DATA	
??0145 . . . . . . . . . . . . .	Byte	 00001FDC _DATA	
??0146 . . . . . . . . . . . . .	Text   	 o
??0147 . . . . . . . . . . . . .	Byte	 00001FDB _DATA	
??0148 . . . . . . . . . . . . .	L Near	 00000FB6 _TEXT	
??0149 . . . . . . . . . . . . .	L Near	 00000FEC _TEXT	
??014A . . . . . . . . . . . . .	Number	 00000000h   
??014B . . . . . . . . . . . . .	Byte	 000020A4 _DATA	
??014D . . . . . . . . . . . . .	Byte	 000020A7 _DATA	
??014E . . . . . . . . . . . . .	Text   	 o
??014F . . . . . . . . . . . . .	Byte	 000020A6 _DATA	
??0150 . . . . . . . . . . . . .	L Near	 00001011 _TEXT	
??0151 . . . . . . . . . . . . .	L Near	 00001047 _TEXT	
??0152 . . . . . . . . . . . . .	Number	 00000000h   
??0153 . . . . . . . . . . . . .	Byte	 0000216F _DATA	
??0155 . . . . . . . . . . . . .	Byte	 00002172 _DATA	
??0156 . . . . . . . . . . . . .	Text   	 o
??0157 . . . . . . . . . . . . .	Byte	 00002171 _DATA	
??0158 . . . . . . . . . . . . .	L Near	 00001086 _TEXT	
??0159 . . . . . . . . . . . . .	L Near	 000010BC _TEXT	
??015A . . . . . . . . . . . . .	Number	 00000000h   
??015B . . . . . . . . . . . . .	Byte	 0000223A _DATA	
??015D . . . . . . . . . . . . .	Byte	 0000223D _DATA	
??015E . . . . . . . . . . . . .	Text   	 o
??015F . . . . . . . . . . . . .	Byte	 0000223C _DATA	
??0160 . . . . . . . . . . . . .	L Near	 000010E1 _TEXT	
??0161 . . . . . . . . . . . . .	L Near	 00001117 _TEXT	
??0162 . . . . . . . . . . . . .	Number	 00000000h   
??0163 . . . . . . . . . . . . .	Byte	 00002305 _DATA	
??0165 . . . . . . . . . . . . .	Byte	 00002308 _DATA	
??0166 . . . . . . . . . . . . .	Text   	 o
??0167 . . . . . . . . . . . . .	Byte	 00002307 _DATA	
??0168 . . . . . . . . . . . . .	L Near	 0000113C _TEXT	
??0169 . . . . . . . . . . . . .	L Near	 00001172 _TEXT	
??016A . . . . . . . . . . . . .	Number	 00000000h   
??016B . . . . . . . . . . . . .	Byte	 000023D0 _DATA	
??016D . . . . . . . . . . . . .	Byte	 000023D3 _DATA	
??016E . . . . . . . . . . . . .	Text   	 o
??016F . . . . . . . . . . . . .	Byte	 000023D2 _DATA	
??0170 . . . . . . . . . . . . .	L Near	 00001197 _TEXT	
??0171 . . . . . . . . . . . . .	L Near	 000011CD _TEXT	
??0172 . . . . . . . . . . . . .	Byte	 0000249C _DATA	
??0173 . . . . . . . . . . . . .	Text   	 "
??0174 . . . . . . . . . . . . .	Byte	 0000249B _DATA	
??0176 . . . . . . . . . . . . .	L Near	 0000126B _TEXT	
??0177 . . . . . . . . . . . . .	Number	 00000000h   
??0178 . . . . . . . . . . . . .	Byte	 000024C0 _DATA	
??017A . . . . . . . . . . . . .	Byte	 000024C3 _DATA	
??017B . . . . . . . . . . . . .	Text   	 o
??017C . . . . . . . . . . . . .	Byte	 000024C2 _DATA	
??017D . . . . . . . . . . . . .	L Near	 00001290 _TEXT	
??017E . . . . . . . . . . . . .	L Near	 000012C6 _TEXT	
??017F . . . . . . . . . . . . .	Number	 00000000h   
??0180 . . . . . . . . . . . . .	Byte	 0000258B _DATA	
??0182 . . . . . . . . . . . . .	Byte	 0000258E _DATA	
??0183 . . . . . . . . . . . . .	Text   	 o
??0184 . . . . . . . . . . . . .	Byte	 0000258D _DATA	
??0185 . . . . . . . . . . . . .	L Near	 000012EB _TEXT	
??0186 . . . . . . . . . . . . .	L Near	 00001321 _TEXT	
??0187 . . . . . . . . . . . . .	Number	 00000000h   
??0188 . . . . . . . . . . . . .	Byte	 00002656 _DATA	
??018A . . . . . . . . . . . . .	Byte	 00002659 _DATA	
??018B . . . . . . . . . . . . .	Text   	 o
??018C . . . . . . . . . . . . .	Byte	 00002658 _DATA	
??018D . . . . . . . . . . . . .	L Near	 0000134D _TEXT	
??018E . . . . . . . . . . . . .	L Near	 00001383 _TEXT	
??018F . . . . . . . . . . . . .	Number	 00000000h   
??0190 . . . . . . . . . . . . .	Byte	 00002721 _DATA	
??0192 . . . . . . . . . . . . .	Byte	 00002724 _DATA	
??0193 . . . . . . . . . . . . .	Text   	 o
??0194 . . . . . . . . . . . . .	Byte	 00002723 _DATA	
??0195 . . . . . . . . . . . . .	L Near	 000013A8 _TEXT	
??0196 . . . . . . . . . . . . .	L Near	 000013DE _TEXT	
??0197 . . . . . . . . . . . . .	Byte	 000027ED _DATA	
??0198 . . . . . . . . . . . . .	Text   	 "
??0199 . . . . . . . . . . . . .	Byte	 000027EC _DATA	
??019B . . . . . . . . . . . . .	L Near	 00001465 _TEXT	
??019C . . . . . . . . . . . . .	Number	 00000000h   
??019D . . . . . . . . . . . . .	Byte	 000027F6 _DATA	
??019F . . . . . . . . . . . . .	Byte	 000027F9 _DATA	
??01A0 . . . . . . . . . . . . .	Text   	 o
??01A1 . . . . . . . . . . . . .	Byte	 000027F8 _DATA	
??01A2 . . . . . . . . . . . . .	L Near	 0000148A _TEXT	
??01A3 . . . . . . . . . . . . .	L Near	 000014C0 _TEXT	
??01A4 . . . . . . . . . . . . .	Number	 00000000h   
??01A5 . . . . . . . . . . . . .	Byte	 000028C1 _DATA	
??01A7 . . . . . . . . . . . . .	Byte	 000028C4 _DATA	
??01A8 . . . . . . . . . . . . .	Text   	 o
??01A9 . . . . . . . . . . . . .	Byte	 000028C3 _DATA	
??01AA . . . . . . . . . . . . .	L Near	 000014E5 _TEXT	
??01AB . . . . . . . . . . . . .	L Near	 0000151B _TEXT	
??01AC . . . . . . . . . . . . .	Number	 0000000Ah   
??01AD . . . . . . . . . . . . .	Number	 0000000Bh   
??01AE . . . . . . . . . . . . .	Number	 00000000h   
??01AF . . . . . . . . . . . . .	Byte	 0000298F _DATA	
??01B7 . . . . . . . . . . . . .	Number	 00000004h   
??01B9 . . . . . . . . . . . . .	Byte	 0000298D _DATA	
??01BA . . . . . . . . . . . . .	Text   	 "
??01BB . . . . . . . . . . . . .	Byte	 0000298C _DATA	
??01BD . . . . . . . . . . . . .	L Near	 00001550 _TEXT	
??01BE . . . . . . . . . . . . .	Number	 00000000h   
??01BF . . . . . . . . . . . . .	Byte	 00002992 _DATA	
??01C1 . . . . . . . . . . . . .	Byte	 00002995 _DATA	
??01C2 . . . . . . . . . . . . .	Text   	 o
??01C3 . . . . . . . . . . . . .	Byte	 00002994 _DATA	
??01C4 . . . . . . . . . . . . .	L Near	 00001597 _TEXT	
??01C5 . . . . . . . . . . . . .	L Near	 000015CD _TEXT	
??01C6 . . . . . . . . . . . . .	Number	 00000000h   
??01C7 . . . . . . . . . . . . .	Byte	 00002A5D _DATA	
??01C9 . . . . . . . . . . . . .	Byte	 00002A60 _DATA	
??01CA . . . . . . . . . . . . .	Text   	 o
??01CB . . . . . . . . . . . . .	Byte	 00002A5F _DATA	
??01CC . . . . . . . . . . . . .	L Near	 000015F2 _TEXT	
??01CD . . . . . . . . . . . . .	L Near	 00001628 _TEXT	
??01CE . . . . . . . . . . . . .	Number	 00000000h   
??01CF . . . . . . . . . . . . .	Byte	 00002B28 _DATA	
??01D1 . . . . . . . . . . . . .	Byte	 00002B2B _DATA	
??01D2 . . . . . . . . . . . . .	Text   	 o
??01D3 . . . . . . . . . . . . .	Byte	 00002B2A _DATA	
??01D4 . . . . . . . . . . . . .	L Near	 0000166E _TEXT	
??01D5 . . . . . . . . . . . . .	L Near	 000016A4 _TEXT	
??01D6 . . . . . . . . . . . . .	Number	 00000000h   
??01D7 . . . . . . . . . . . . .	Byte	 00002BF3 _DATA	
??01D9 . . . . . . . . . . . . .	Byte	 00002BF6 _DATA	
??01DA . . . . . . . . . . . . .	Text   	 o
??01DB . . . . . . . . . . . . .	Byte	 00002BF5 _DATA	
??01DC . . . . . . . . . . . . .	L Near	 000016C9 _TEXT	
??01DD . . . . . . . . . . . . .	L Near	 000016FF _TEXT	
??01DE . . . . . . . . . . . . .	Number	 00000000h   
??01DF . . . . . . . . . . . . .	Byte	 00002CBE _DATA	
??01E1 . . . . . . . . . . . . .	Byte	 00002CC1 _DATA	
??01E2 . . . . . . . . . . . . .	Text   	 o
??01E3 . . . . . . . . . . . . .	Byte	 00002CC0 _DATA	
??01E4 . . . . . . . . . . . . .	L Near	 00001768 _TEXT	
??01E5 . . . . . . . . . . . . .	L Near	 0000179E _TEXT	
??01E6 . . . . . . . . . . . . .	Number	 00000000h   
??01E7 . . . . . . . . . . . . .	Byte	 00002D89 _DATA	
??01E9 . . . . . . . . . . . . .	Byte	 00002D8C _DATA	
??01EA . . . . . . . . . . . . .	Text   	 o
??01EB . . . . . . . . . . . . .	Byte	 00002D8B _DATA	
??01EC . . . . . . . . . . . . .	L Near	 000017C3 _TEXT	
??01ED . . . . . . . . . . . . .	L Near	 000017F9 _TEXT	
??01EE . . . . . . . . . . . . .	Byte	 00002E55 _DATA	
??01EF . . . . . . . . . . . . .	Text   	 "
??01F0 . . . . . . . . . . . . .	Byte	 00002E54 _DATA	
??01F2 . . . . . . . . . . . . .	L Near	 000018A0 _TEXT	
??01F3 . . . . . . . . . . . . .	Number	 00000000h   
??01F4 . . . . . . . . . . . . .	Byte	 00002E67 _DATA	
??01F6 . . . . . . . . . . . . .	Byte	 00002E6A _DATA	
??01F7 . . . . . . . . . . . . .	Text   	 o
??01F8 . . . . . . . . . . . . .	Byte	 00002E69 _DATA	
??01F9 . . . . . . . . . . . . .	L Near	 000018C5 _TEXT	
??01FA . . . . . . . . . . . . .	L Near	 000018FB _TEXT	
??01FB . . . . . . . . . . . . .	Number	 00000000h   
??01FC . . . . . . . . . . . . .	Byte	 00002F32 _DATA	
??01FE . . . . . . . . . . . . .	Byte	 00002F35 _DATA	
??01FF . . . . . . . . . . . . .	Text   	 o
??0200 . . . . . . . . . . . . .	Byte	 00002F34 _DATA	
??0201 . . . . . . . . . . . . .	L Near	 00001920 _TEXT	
??0202 . . . . . . . . . . . . .	L Near	 00001956 _TEXT	
??0203 . . . . . . . . . . . . .	Number	 00000000h   
??0204 . . . . . . . . . . . . .	Byte	 00002FFD _DATA	
??0206 . . . . . . . . . . . . .	Byte	 00003000 _DATA	
??0207 . . . . . . . . . . . . .	Text   	 o
??0208 . . . . . . . . . . . . .	Byte	 00002FFF _DATA	
??0209 . . . . . . . . . . . . .	L Near	 00001982 _TEXT	
??020A . . . . . . . . . . . . .	L Near	 000019B8 _TEXT	
??020B . . . . . . . . . . . . .	Number	 00000000h   
??020C . . . . . . . . . . . . .	Byte	 000030C8 _DATA	
??020E . . . . . . . . . . . . .	Byte	 000030CB _DATA	
??020F . . . . . . . . . . . . .	Text   	 o
??0210 . . . . . . . . . . . . .	Byte	 000030CA _DATA	
??0211 . . . . . . . . . . . . .	L Near	 000019DD _TEXT	
??0212 . . . . . . . . . . . . .	L Near	 00001A13 _TEXT	
??0213 . . . . . . . . . . . . .	Byte	 00003194 _DATA	
??0214 . . . . . . . . . . . . .	Text   	 "
??0215 . . . . . . . . . . . . .	Byte	 00003193 _DATA	
??0217 . . . . . . . . . . . . .	L Near	 00001AC4 _TEXT	
??0218 . . . . . . . . . . . . .	Number	 00000000h   
??0219 . . . . . . . . . . . . .	Byte	 000031A5 _DATA	
??021B . . . . . . . . . . . . .	Byte	 000031A8 _DATA	
??021C . . . . . . . . . . . . .	Text   	 o
??021D . . . . . . . . . . . . .	Byte	 000031A7 _DATA	
??021E . . . . . . . . . . . . .	L Near	 00001AE9 _TEXT	
??021F . . . . . . . . . . . . .	L Near	 00001B1F _TEXT	
??0220 . . . . . . . . . . . . .	Number	 00000000h   
??0221 . . . . . . . . . . . . .	Byte	 00003270 _DATA	
??0223 . . . . . . . . . . . . .	Byte	 00003273 _DATA	
??0224 . . . . . . . . . . . . .	Text   	 o
??0225 . . . . . . . . . . . . .	Byte	 00003272 _DATA	
??0226 . . . . . . . . . . . . .	L Near	 00001B44 _TEXT	
??0227 . . . . . . . . . . . . .	L Near	 00001B7A _TEXT	
??0228 . . . . . . . . . . . . .	Number	 00000000h   
??0229 . . . . . . . . . . . . .	Byte	 0000333B _DATA	
??022B . . . . . . . . . . . . .	Byte	 0000333E _DATA	
??022C . . . . . . . . . . . . .	Text   	 o
??022D . . . . . . . . . . . . .	Byte	 0000333D _DATA	
??022E . . . . . . . . . . . . .	L Near	 00001BA6 _TEXT	
??022F . . . . . . . . . . . . .	L Near	 00001BDC _TEXT	
??0230 . . . . . . . . . . . . .	Number	 00000000h   
??0231 . . . . . . . . . . . . .	Byte	 00003406 _DATA	
??0233 . . . . . . . . . . . . .	Byte	 00003409 _DATA	
??0234 . . . . . . . . . . . . .	Text   	 o
??0235 . . . . . . . . . . . . .	Byte	 00003408 _DATA	
??0236 . . . . . . . . . . . . .	L Near	 00001C01 _TEXT	
??0237 . . . . . . . . . . . . .	L Near	 00001C37 _TEXT	
??0238 . . . . . . . . . . . . .	Byte	 000034D2 _DATA	
??0239 . . . . . . . . . . . . .	Text   	 "
??023A . . . . . . . . . . . . .	Byte	 000034D1 _DATA	
??023C . . . . . . . . . . . . .	L Near	 00001C80 _TEXT	
??023D . . . . . . . . . . . . .	Byte	 000034E4 _DATA	
??023E . . . . . . . . . . . . .	Text   	 "
??023F . . . . . . . . . . . . .	Byte	 000034E3 _DATA	
??0241 . . . . . . . . . . . . .	L Near	 00001CD2 _TEXT	
??0242 . . . . . . . . . . . . .	Byte	 000034F8 _DATA	
??0243 . . . . . . . . . . . . .	Text   	 "
??0244 . . . . . . . . . . . . .	Byte	 000034F7 _DATA	
??0246 . . . . . . . . . . . . .	L Near	 00001D10 _TEXT	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AA . . . . . . . . . . . . . . .	L Near	 0000185B _TEXT	
All_ . . . . . . . . . . . . . .	DWord	 00000C29 _DATA	
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Answers  . . . . . . . . . . . .	DWord	 00000E81 _DATA	
BEGIN  . . . . . . . . . . . . .	L Near	 0000043C _TEXT	
Bit_M  . . . . . . . . . . . . .	DWord	 00000C01 _DATA	
Bit  . . . . . . . . . . . . . .	DWord	 00000BD9 _DATA	
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
Change_byte  . . . . . . . . . .	L Near	 00000DBA _TEXT	
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Children . . . . . . . . . . . .	DWord	 000009F9 _DATA	
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Diophant@0 . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FF . . . . . . . . . . . . . . .	L Near	 00000EA3 _TEXT	
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FIN  . . . . . . . . . . . . . .	L Near	 00000E8A _TEXT	
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
Gen@0  . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
Index_child  . . . . . . . . . .	DWord	 00000029 _DATA	
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
KK . . . . . . . . . . . . . . .	L Near	 00001A7F _TEXT	
L10  . . . . . . . . . . . . . .	L Near	 000011E9 _TEXT	
L11  . . . . . . . . . . . . . .	L Near	 0000120C _TEXT	
L12  . . . . . . . . . . . . . .	L Near	 000013FF _TEXT	
L13  . . . . . . . . . . . . . .	L Near	 00001644 _TEXT	
L14  . . . . . . . . . . . . . .	L Near	 00001738 _TEXT	
L15  . . . . . . . . . . . . . .	L Near	 00001748 _TEXT	
L16  . . . . . . . . . . . . . .	L Near	 0000182D _TEXT	
L17  . . . . . . . . . . . . . .	L Near	 00001A3E _TEXT	
L18  . . . . . . . . . . . . . .	L Near	 00001A2D _TEXT	
L19  . . . . . . . . . . . . . .	L Near	 00001A6F _TEXT	
L20  . . . . . . . . . . . . . .	L Near	 00001525 _TEXT	
L2 . . . . . . . . . . . . . . .	L Near	 000005A6 _TEXT	
L3 . . . . . . . . . . . . . . .	L Near	 00000720 _TEXT	
L444 . . . . . . . . . . . . . .	L Near	 00000C14 _TEXT	
L44  . . . . . . . . . . . . . .	L Near	 00000A9D _TEXT	
L4 . . . . . . . . . . . . . . .	L Near	 00000926 _TEXT	
L5 . . . . . . . . . . . . . . .	L Near	 00000D52 _TEXT	
L6 . . . . . . . . . . . . . . .	L Near	 00000D7E _TEXT	
L7 . . . . . . . . . . . . . . .	L Near	 00000E51 _TEXT	
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
Mode_r . . . . . . . . . . . . .	DWord	 00000021 _DATA	
Mutacia@0  . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Mut  . . . . . . . . . . . . . .	L Near	 00001A4B _TEXT	
M  . . . . . . . . . . . . . . .	DWord	 0000001D _DATA	
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
N_min_str  . . . . . . . . . . .	L Near	 00001714 _TEXT	
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
N  . . . . . . . . . . . . . . .	DWord	 00000019 _DATA	
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
Osobi  . . . . . . . . . . . . .	DWord	 00000035 _DATA	
Out10  . . . . . . . . . . . . .	L Near	 00000C82 _TEXT	
Out11  . . . . . . . . . . . . .	L Near	 000011D7 _TEXT	
Out12  . . . . . . . . . . . . .	L Near	 000013E8 _TEXT	
Out13  . . . . . . . . . . . . .	L Near	 00001632 _TEXT	
Out14  . . . . . . . . . . . . .	L Near	 00001A1D _TEXT	
Out15  . . . . . . . . . . . . .	L Near	 00001B89 _TEXT	
Out1 . . . . . . . . . . . . . .	L Near	 0000043C _TEXT	
Out2 . . . . . . . . . . . . . .	L Near	 00000596 _TEXT	
Out3 . . . . . . . . . . . . . .	L Near	 00000613 _TEXT	
Out44  . . . . . . . . . . . . .	L Near	 0000078D _TEXT	
Out4 . . . . . . . . . . . . . .	L Near	 00000710 _TEXT	
Out5 . . . . . . . . . . . . . .	L Near	 00000916 _TEXT	
Out6 . . . . . . . . . . . . . .	L Near	 00000994 _TEXT	
Out7 . . . . . . . . . . . . . .	L Near	 00000A8D _TEXT	
Out8 . . . . . . . . . . . . . .	L Near	 00000B0B _TEXT	
Out9 . . . . . . . . . . . . . .	L Near	 00000C04 _TEXT	
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Parent_1 . . . . . . . . . . . .	DWord	 00000B89 _DATA	
Parent_2 . . . . . . . . . . . .	DWord	 00000BB1 _DATA	
Pause  . . . . . . . . . . . . .	Text   	 pause
Print@0  . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Probability_M  . . . . . . . . .	DWord	 00000EF9 _DATA	
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
Start  . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public STDCALL
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
X_20 . . . . . . . . . . . . . .	DWord	 00000025 _DATA	
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
finish1  . . . . . . . . . . . .	L Near	 00001D1A _TEXT	
finish2  . . . . . . . . . . . .	L Near	 00001CE5 _TEXT	
finish3  . . . . . . . . . . . .	L Near	 00001C8F _TEXT	
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
tmp1 . . . . . . . . . . . . . .	DWord	 0000002D _DATA	
tmp2 . . . . . . . . . . . . . .	DWord	 00000031 _DATA	
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
